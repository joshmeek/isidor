version: '3.8'

services:
  db:
    image: pgvector/pgvector:pg16
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=isidor
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - isidor-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=isidor
      - POSTGRES_PORT=5432
      - SECRET_KEY=isidor_secret_key_change_in_production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8000"]
      - EMBEDDING_MODEL=all-MiniLM-L6-v2
      - EMBEDDING_DIMENSION=384
      - SIMILARITY_THRESHOLD=0.7
      - GEMINI_API_KEY=AIzaSyDfSV8yI0DM0UfmH2ZMRfQGleEkR9J8J9I
      - GEMINI_MODEL=gemini-2.0-flash
    volumes:
      - ./:/app/
    networks:
      - isidor-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

networks:
  isidor-network:

volumes:
  postgres_data: 